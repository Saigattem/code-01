                                  INHERITENCE
class vehicle:
     def start_engine(self):
        print("Engine started.....")
class car(vehicle):
    def drive(self):
        print("The car is being drive")
c=car()
c.start_engine() # inherited method
c.drive() # sub class own method

OUTPUT:
Engine started.....
The car is being drive



class person():
    def info(self):
        print("I AM STUDENT")
class student(person):
    def study(self):
        print("The student is studying")
s=student()
s.info()
s.study()

output:
I AM STUDENT
The student is studying


'''code to perform addition operation using superclass and
user input and sub class as operation
print the summated value at subclass'''
class operate:
  def userdata(self):
    self.num1=int(input("enter the value of num1: "))
    self.num2=int(input("enter the value of num2: "))
class summate(operate):
    def add(self):
      result=self.num1+self.num2
      print(f"The result is {result} ")  
c=summate()
c.userdata()
c.add()

OUTPUT:
enter the value of num1:  7
enter the value of num2:  7
The result is 14 


'''code to calculate normal division by considering input
in superclass and evaltion in sub class, where zero divison error must br handled.'''
class operate:
    def userdata(self):
        self.num1=float(input("enter the value of num1: "))
        self.num2=float(input("enter the value of num2: "))
class divide(operate):
    def div(self):
          try:
            result = self.num1 / self.num2
          except ZeroDivisionError:
            print("Division by zero is not allowed.")
          else:
            print(f"The result of {self.num1} divided by {self.num2} is: {result}")
c=divide()  
c.userdata()
c.div()

output:
1.)
enter the value of num1:  3
enter the value of num2:  0
Division by zero is not allowed
2.)
enter the value of num1:  7
enter the value of num2:  7
The result of 7.0 divided by 7.0 is: 1.0

